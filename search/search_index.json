{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home Server","text":""},{"location":"#local-processes-and-services","title":"Local Processes and Services","text":"<ul> <li>Proxmox Base OS</li> <li>Harry the Home Assistant Server<ul> <li>Home Assistant</li> <li>Node-Red</li> <li>Adguard Home</li> <li>Zigbee2MQTT</li> <li>Homebridge</li> <li>Mealie</li> </ul> </li> <li>Peter the Plex Server<ul> <li>Plex</li> </ul> </li> </ul>"},{"location":"#recent-changes-and-additions","title":"Recent Changes and Additions","text":"<ul> <li>Zero Trust Policy</li> <li>Mealie</li> </ul>"},{"location":"#known-issues-to-resolve","title":"Known Issues to Resolve","text":"<ul> <li>3-2-1 Backup Strategy<ul> <li>Stronger Off-site Backup required</li> </ul> </li> </ul>"},{"location":"applications/home-assistant/","title":"Home Assistant","text":"<p>The \"real\" reason this server exists. This is the main Home Automation/Control/Dashboard Platform and is System Critical and Crucial to my Home.</p>"},{"location":"applications/home-assistant/#configuration","title":"Configuration","text":"<ul> <li>Docker Installation</li> <li>Contains many configuration files for Dashboards, Services, Scripts etc.</li> </ul>"},{"location":"applications/home-assistant/#use-cases","title":"Use Cases","text":"<p>Home Assistant is the Main Platform, though does not deal with the automations. Node-Red is a more visual platform that makes it easier to create complex automations. Instead, Home Assistant Serves as the:</p> <ul> <li>State-Machine - Stores all current states of devices for easy access</li> <li>Service Connector - Connects to all Zigbee devices via Zigbee2MQTT, Smart TVs, Google Assistant, Weather Providers etc.</li> <li>Dashboard - Though not relied upon, quick, simple dashboards for out-of-automation control and quick data views</li> </ul>"},{"location":"applications/home-assistant/#automation-vs-google-assistant-vs-dashboard-decisions","title":"Automation Vs. Google Assistant, Vs Dashboard decisions","text":"<p>To decide how a certain service will be called (e.g., light turned on, state changed etc.) I follow the following principles. </p> <ul> <li>Automation Potential - Is there a set time, set action, set goal in which this scene, toggle, etc. is needed? E.g., At (or just before) sunset, turn the house to evening mode, switching on lights etc.</li> <li>(If Not) Google Assistant Requirements - Will this be frequently manually toggled at different times throughout the day? E.g., When it's time to go to sleep, use a goodnight routine to trigger a script to put the house into sleeping mode</li> <li>(If Not) Add it to a dashboard</li> </ul> <p>The majority of switches/toggles/services can be accessed via a dashboard for quick toggling where e.g., it can make more sense to quickly toggle via the app rather than voice command whilst music is being played.</p>"},{"location":"applications/home-assistant/#known-issues-current-refinement-goals","title":"Known Issues / Current Refinement Goals","text":"<ul> <li>Fine-tune notification configurations - Too many notifications, data is still useful etc.</li> <li>Away mode notifications</li> </ul>"},{"location":"applications/home-assistant/#backup-strategy","title":"Backup Strategy","text":"<ul> <li>Included in Portainer Daily Image</li> <li>Configuration Backup Taken before Software Update or Server Maintenance is undertaken</li> </ul>"},{"location":"applications/mealie/","title":"Mealie","text":"<p>Mealie is a Recipe Repository Web App. It includes functionality to web-scrape, add tags and categories to recipes and add header photos to recipes. </p>"},{"location":"applications/mealie/#mealie-access","title":"Mealie Access","text":"<p>As access is required by both myself and my partner, this Web App is available as a sub-domain and is protected by Zero Trust authentication.</p>"},{"location":"applications/zigbee2mqtt/","title":"Zigbee2MQTT","text":"<p>Serving a the Controller for all Zigbee Devices (Lights, Switches, Sensors) this is a System Critical Application.</p>"},{"location":"applications/zigbee2mqtt/#configuration","title":"Configuration","text":"<ul> <li>Docker Installation</li> <li>Uses configuration.yaml file which includes<ul> <li>Zigbee Controller Location (i.e., USB Route)</li> <li>Pre-Existing Device Connections - Serial Numbers, Types etc.</li> <li>Custom Local-Only Webpage Port Definition for easier control and configuration</li> </ul> </li> </ul>"},{"location":"architecture/zero-trust/","title":"Zero-Trust","text":""},{"location":"architecture/zero-trust/#why-zero-trust","title":"Why Zero-Trust?","text":"<p>Before </p> <p>Nginx Reverse-Proxy relying on Cloudflare's blocking services to filter out bad actor traffic.</p> <p>This Allowed For:</p> <ul> <li>Centralised Connectivity Control - Expose Ports via Nginx config files, reload Nginx</li> <li>Provider Flexibility - No walled-garden with one hosting provider</li> <li>Self-Managed SSL Certificates</li> </ul> <p>But it caused issues with:</p> <ul> <li>Dynamic DNS on Domestic Broadband</li> <li>Complexity - Nginx and complex configuration files, Public IP watcher (and preferably updater), Keeping SSL Certificates Updated</li> <li>Requires Port-Forwarding on Router</li> </ul> <p>After</p> <p>Zero-Trust Externally Available Apps, with Internal Tunnelled connections relying on the WARP infrastructure to reduce complexity in connectivity maintenance.</p> <p>Which reduced any issues with:</p> <ul> <li>Dynamic DNS - Manged network via a Tunnel</li> <li>Certificates - Generated and Managed by Cloudflare</li> <li>Complexity - Add new External Service by pointing new sub-domain to the local IP and post number. Or keep it only accessible via a WARP connection using local IP</li> <li>No Port Forwarding Required</li> <li>More security at first-access - Access only if matching rules (e.g., emails), before reaching my Server</li> </ul> <p>Concerns still apply with:</p> <ul> <li>Fair-Use Policy with Cloudflare - Plex</li> <li>Vendor-Lock in - Cloudflare is now a requirement which could cost in the future</li> <li>Rule Overlap - Domain-Wide Rules + Zero Access Rules need to be considered</li> </ul>"},{"location":"architecture/zero-trust/#zero-trust-configuration","title":"Zero-Trust Configuration","text":"<p>Checklist in force for making an Application Accessible via Domain Name:</p> <ul> <li>Does it require Access beyond just myself? E.g., Google Assistant for Home Assistant, Partner for Mealie etc.</li> <li>What Sort of Access is required? E.g., Apps can have issues with initial Log-in, External Servers will not log in as require open access, just myself accessing or others?</li> <li>Is there a need further than the above two points? E.g, Password Manager requires SSL for app-logic to work and so needs a sub-domain</li> <li>If WARP connectivity could not be established, would it be useful to fall-back to domain + log in?</li> </ul> <p>Everything else will be kept as locally accessible (including via WARP Tunnelling)</p>"}]}